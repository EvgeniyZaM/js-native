// Приоритеты операторов. От самого высокого, до самого низкого

// 19. () (группировка)

// 18. . (доступ к свойствам через точку) (слева направо)
// 18. [] (доступ к свойствам через квадратные скобки) (слева направо)
// 18. new (со списком аргументов)
// 18. () (вызов функции) (слева направо)
// 18. ?. (оператор опциональной последовательности) (слева направо)

// 17. new (без списка аргументов) (справа налево)

// 16. ++ (постфиксная форма инкремента)
// 16. -- (постфиксная форма декремента)

// 15. ! (логическое отрицание) (справа налево)
// 15. + (унарный плюс) (справа налево)
// 15. - (унарный минус) (справа налево)
// 15. ++ (префиксная форма инкремента) (справа налево)
// 15. -- (префиксная форма декремента) (справа налево)
// 15. typeof (справа налево)
// 15. void (справа налево)
// 15. delete (справа налево)
// 15. await (справа налево)

// 14. ** (возведение в степень) (справа налево)

// 13. * (умножение) (слева направо)
// 13. / (деление) (слева направо)
// 13. % (остаток от деления) (слева направо)

// 12. + (сложение)
// 12. - (вычитание)

// 10. < (меньше) (слева направо)
// 10. <= (меньше или равно) (слева направо)
// 10. > (больше) (слева направо)
// 10. >= (больше или равно) (слева направо)
// 10. in (слева направо)
// 10. instanceof (слева направо)

// 9. == (равенство) (слева направо)
// 9. != (неравенство) (слева направо)
// 9. === (строгое равенство) (слева направо)
// 9. !== (строгое неравенство) (слева направо)

// 5. && (логическое и) (слева направо)

// 4. || (логическое или) (слева направо)
// 4. ?? (оператор нулевого слияния) (слева направо)

// 3. ? : (тернарный оператор) (справа налево)

// 2. = (присваивание) (справа налево)
// 2. yield (справа налево)
// 2. yield* (справа налево)

// 1. , (запятая) (слева направо)
